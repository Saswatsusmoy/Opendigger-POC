# OpenDigger Repository Labeling POC - .gitignore

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to ignore the entire .idea directory.
.idea/

# VS Code
.vscode/
*.code-workspace

# Machine Learning Models and Cache
models/
*.pkl
*.joblib
*.h5
*.hdf5
*.pb
*.onnx
*.tflite
*.pt
*.pth
*.bin
*.safetensors

# Hugging Face Cache
.cache/
transformers_cache/
huggingface_hub/

# spaCy Models (keep requirements but not downloaded models)
# Uncomment if you want to ignore downloaded spaCy models
# en_core_web_*/
# en_core_web_sm/
# en_core_web_md/
# en_core_web_lg/

# NLTK Data
nltk_data/

# Data Files
data/raw/
data/processed/
data/output/
data/cache/
data/temp/
*.csv
*.json
*.jsonl
*.parquet
*.feather
*.xlsx
*.xls

# Keep example/template data files
!data/examples/
!*_example.*
!*_template.*
!*_sample.*

# Log Files
logs/
*.log
*.log.*
log_*.txt

# Temporary Files
tmp/
temp/
*.tmp
*.temp
*~
.DS_Store
Thumbs.db

# Configuration Files (keep examples)
.env
config.ini
config.yaml
config.json
!.env.example
!config.example.*
!config.template.*

# Database Files
*.db
*.sqlite
*.sqlite3

# Backup Files
*.bak
*.backup
*.old

# OS Generated Files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk

# Linux
*~

# Archives
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Large Files (Git LFS should be used instead)
*.bin
*.dat
*.dump

# Jupyter Notebook Checkpoints
.ipynb_checkpoints/

# Profiling Data
*.prof
*.lprof

# Memory Profiling
*.mprof

# Coverage Reports
htmlcov/
.coverage
coverage.xml

# Pytest
.pytest_cache/

# Tox
.tox/

# Virtual Environments
venv/
env/
ENV/
.venv/
.env/

# Docker
.dockerignore
docker-compose.override.yml

# Kubernetes
*.kubeconfig

# Terraform
*.tfstate
*.tfstate.*
.terraform/

# IDE and Editor Files
*.swp
*.swo
*~
.vscode/
.idea/
*.sublime-project
*.sublime-workspace

# Project Specific
# Add any project-specific files or directories to ignore

# Keep important configuration templates
!requirements.txt
!setup.py
!pyproject.toml
!Dockerfile
!docker-compose.yml
!README.md
!LICENSE
!.env.example 